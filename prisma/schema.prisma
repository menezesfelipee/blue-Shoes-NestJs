// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl     = env("SHADOW_DATABASE_URL")
}

model Categorias {
  id               Int       @id @default(autoincrement())
  nome             String
  produto          Produto[]
}
model Pedido {
  id               Int       @id @default(autoincrement())
  valor            Decimal
  cep              String
  endereco_entrega String
  boleto           String
  carrinho         Carrinho? @relation(fields: [carrinhoId], references: [id])
  carrinhoId       Int?      @unique
  Usuario          Usuario?  @relation(fields: [usuarioId], references: [id])
  usuarioId        Int?
}

model Usuario {
  id               Int       @id @default(autoincrement())
  nome             String
  sobrenome        String
  email            String    @unique
  cpf              String    @unique
  senha            String
  role             String    @default("user")
  carrinho         Carrinho?
  pedido           Pedido[]
}

model Carrinho {
  id                Int       @id @default(autoincrement())
  valor_total       Float?
  usuario           Usuario?  @relation(fields: [usuarioId], references: [id])
  usuarioId         Int?
  Item_do_carrinho  Item_do_carrinho[]
  pedido            Pedido?
}

model Produto {
  id                Int        @id @default(autoincrement())
  nome              String
  descricao         String
  imagem            String
  quantidade_vendas Int?
  tamanho           Int        @default(40)
  cor               String     @default("Branco")
  logo              String
  marca             String
  preco             Float
  Item_do_carrinho  Item_do_carrinho[]
  categorias        Categorias? @relation(fields: [categoriasId], references: [id])
  categoriasId      Int?
}

model Item_do_carrinho {
  id                Int         @id @default(autoincrement())
  carrinho          Carrinho?   @relation(fields: [carrinhoId], references: [id])
  carrinhoId        Int?
  produto           Produto?    @relation(fields: [produtoId], references: [id])
  produtoId         Int?
  quantidade        Int
}